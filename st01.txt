cs50.ai
사이트는 누가나 사용이 가능한가?

128 64 32 16 8 4 2 1
 0   0  0  0 0 0 0 0
ASCII 값을 계산하는 방법 하는 비트에 1로 이루어진 경우 해당하는 비트값을 더하여 
ASCII 값을 확인 할 수 있음
ASCII표를 확인하는 해당하는 숫자에 문자 및 기호를 확인 할 수 있음

한글에 ASCII 값은 어떻게 계산하는가?
ASCII코드로 설정된 부분이 아니라 unicode값이로 매칭된 문자를 출력
2바이트 사용(16진수)

Scratch
scratch.mit.edu 사이트
input -> algorithnm -> output
프로그래밍을 쉽게 접근하고 사용자 친화적

프로그래밍 언어를 어떻게 해서 컴퓨터에서는 해석하는건가?
소스를 변환해주는 기계적은 방법을 무엇이라고 하는가?
source code -> compiler(기계어로 변환) -> machine code

cs50.dev 사이트 무료로 사용가능 (github 사용자)

vscode 
그래픽컬 유저 인터페이지(아이콘, 메, 버튼 등등,GUI)
vscode 터미널
개념적으로 command line interface
명령어 인터페이스(CLI)
make, clang -> 코드의 컴파일을 트리거
clang -o hello hello.c -> hello.c 파일을 clang 명령어 인수자 -o를 넣어서 hello라는 컴파일 파일을 만듬

강의에서 hello로 make를 했는데 실행시에는 ./hello로 실행을 하는 이유는 무언인가?
./ -> 경로는 지정하는 부분이라서 실제 hello라는 make로 만들어 파일이 어는 위치에 있는
확인하고 그 위에 파일이 있으면 실행 없으면 실행이 되지 않는다.
왜 ./hello로 실행을 해야 하는가?
컴파일러가 해당하는 소스코드를 기계어로 변환을 해야 사용이 가능 하기 때문
왜 ./hello.c를 실행하지 않는가?
c언어는 컴파일을 사용하여 기계어를 변환을 해야 하므로 소스코드를 바로 사용을 하면
오류를 발생하며 실행도 되지 않는데 
컴파일을 사용하지 않는 언어는 해당 언어에 가상컴파일러 포함이 되어 있어서 자동으로 컴파일을
진행하고 실행을 한다

.h(표준 io.h)로 끝나는 모든 파일은 소스가 아닙니다(헤더파일)
소스코드 상단에 헤더파일이 없으면 오류 발생
소스코드 상단에 있는거는 일종에 도서관이라고 생각하며 이는 라이브러리(libraries)함

libraries(라이브러리) 다른 사람이 작성한 코드 모음

manual.cs50.io 사이트 C에서 사용하는 함수를 확인할 수 있음
해당하는 사이트에는 표준 io.h에 사용된 라이브러리를 확인 및 관련 내용 설명도 제공

cs50 강의에서 사용하는 cs50.h 헤더파일은 어떻게 사용할 수 있는건가?
정확히는 헤더파일을 설치가 필요한 부분인가?

C, C++, java 
counter =  counter + 1; -> counter += 1; -> counter++;
1씩 증가하는 방법 세가지


C 강의
compare.c 내용중에 int x = get_int("내용") 여기에서 int로 타입을 선언을 했는데 
하고 get_int 라이브러리를 사용하였는데 int로 타입을 선언을 하면 숫자로 인식을 해야 하는거 
아닌가? 그럼 실행 시 오류가 나와야 하는건 아닌지?
get_int 이라는 라이브러리에 input 으로 등록하는 부분이 있으면 등록된 부분에 숫자를 
입력을 하면 x = 숫자로 지정이 되기 때문에 해당하는 부분에서는 오류가 발생하지 않는다.


프로그래밍을 중요성 3가지
정확성, 디자인(프로그래밍의 코드를 더 잘 구성할 수 있는지), 스타일(보기 편하게)
check50, desing50, style50

constants
cont i = 9;
고정된 값으로 지정이 됨
i값을 다시 지정을 해도 컴파일러가 변경을 허용하지 않음


overflow
지정된 메모니를 넣어가면 그 부분부터 음수로 갔다가 0으로 지정됨

truncation
소주점는 모두 짜른다 -> 값에 타입을 float로 변경하면 소수점이 처리됨

int, float 32비트 메모리를 사용 더 많은 숫자를 사용할려면 long, double float를 사용

preprocessing -> 소스에서 사용하는 라이브러리나 프로토타입을 전처리함 
compiling -> 소스코드를 읽을 수 있도록 변환
assembling -> 변환된 소스코드를 기계어로 처리 
linking -> 소스코드에 있는 전처리파일과 코드작성 파일을 하나로 연결


string 타입은 실제 메모리에는 문자길이+1로 지정이 된다.
마지막를 나타내는 부분은 0으로 처리한다
0부분으로 처리되는 부분은 NUL이라고 하고 문자에 종료를 의미한다
manual.cs50.io/#string.h 메뉴얼에서 문자열에 대한 함수들을 확인할 수 있다

대소문자 변환에서 문자열을 연산할 수 있는 이유는?
지정된 문자열에 ASCII 값으로 컴퓨터는 처리 하기 때문에 문자열에 마이너스 연산이 가능하기 처리된다

int main(int argc(#인수갯수), string argv[](#인수 갯수 배열))

선택정렬, 버블정렬 알고리즘? 더욱 디테일한 설명이 필요

재귀 알고리즘 
자기 자신을 호출하는 것(재귀 함수)

병렬정렬
데이터를 반으로 나누거 왼쪽 오른쪽 
왼쪽 데이터를 다시 반으로 나누고 왼쪽 정렬
나머지 오른쪽 데이터 정렬
왼쪽, 오른쪽 정렬된 데이터를 다시 합치고 정렬

